
#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗакрыватьПриВыборе = Истина;

	Если Параметры.Свойство("Значение") Тогда
		//@skip-check unknown-form-parameter-access
		СтрокаУникальныйИдентификатор = Параметры.Значение;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаУникальныйИдентификатор) Тогда
		СтрокаУникальныйИдентификатор = УИ_ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура УникальныйИдентификаторОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Текст) Тогда
		Попытка
			//@skip-warning
			ъ = Новый УникальныйИдентификатор(Текст);
		Исключение
			ВызватьИсключение "Некорректный уникальный идентификатор!";
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПриИзменении(Элемент)
	Если Ссылка <> Неопределено Тогда
		//@skip-warning
		СтрокаУникальныйИдентификатор = Ссылка.УникальныйИдентификатор();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УникальныйИдентификаторОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаУникальныйИдентификатор = УИ_ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ВыбранноеЗначение = УИ_ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор();
	Если ЗначениеЗаполнено(СтрокаУникальныйИдентификатор) Тогда
		//@skip-check empty-except-statement
		Попытка
			ВыбранноеЗначение = Новый УникальныйИдентификатор(СтрокаУникальныйИдентификатор);
		Исключение
			УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Указан некорректный уникальный идентификатор");
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	Если ВладелецФормы <> Неопределено Тогда
		ОповеститьОВыборе(ВыбранноеЗначение);
	Иначе
		Закрыть(ВыбранноеЗначение);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаНайти(Команда)
	Ссылка = КомандаНайтиНаСервере(СтрокаУникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура Сгенерировать(Команда)
	СтрокаУникальныйИдентификатор = Строка(Новый УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, КлассСсылки, Менеджер, СтрокаУникальныйИдентификатор)
	
	Ссылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаУникальныйИдентификатор));
	ИмяМетаданных = Ссылка.Метаданные().Имя;
	ТаблицаБазы = КлассСсылки + "." + ИмяМетаданных;
	ИмяПараметра = КлассСсылки + ИмяМетаданных;;
	
	маЗапросПоиска.Добавить(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	" + ТаблицаБазы + " КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &" + ИмяПараметра);
	ЗапросПоиска.УстановитьПараметр(ИмяПараметра, Ссылка);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция КомандаНайтиНаСервере(СтрокаУникальныйИдентификатор)
	
	ЗапросПоиска = Новый Запрос;
	МаЗапросПоиска = Новый Массив;
	
	Для Каждого Менеджер Из Справочники Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "Справочник", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из Документы Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "Документ", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из ПланыСчетов Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "ПланСчетов", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	                                                         
	Для Каждого Менеджер Из ПланыВидовХарактеристик Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "ПланВидовХарактеристик", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из ПланыВидовРасчета Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "ПланВидовРасчета", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из БизнесПроцессы Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "БизнесПроцесс", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из Задачи Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "Задача", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	Для Каждого Менеджер Из ПланыОбмена Цикл
		ДобавитьЗапрос(МаЗапросПоиска, ЗапросПоиска, "ПланОбмена", Менеджер, СтрокаУникальныйИдентификатор);
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(МаЗапросПоиска, "
		|ОБЪЕДИНИТЬ ВСЕ
		|");
	
	ЗапросПоиска.Текст = ТекстЗапроса;
	Выборка = ЗапросПоиска.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


#КонецОбласти



