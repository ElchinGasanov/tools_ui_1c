
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	СпособыПолученияРазмераТаблицБазыДаных = СпособыПолученияРазмераТаблицБазыДаных();
	
	Элементы.СпособОпределенияРазмераТаблицы.СписокВыбора.Очистить();
	
	Для Каждого КлючЗначение Из СпособыПолученияРазмераТаблицБазыДаных Цикл
		Элементы.СпособОпределенияРазмераТаблицы.СписокВыбора.Добавить(КлючЗначение.Значение.Имя,
																	   КлючЗначение.Значение.Представление);
	КонецЦикла;
	
	СпособОпределенияРазмераТаблиц = СпособыПолученияРазмераТаблицБазыДаных.Нет.Имя;
	ПриИзмененииСпособаОпределенияРазмераТаблицНаСервере();

	ЕдиницыИзмеренияРазмераТаблиц = ЕдиницыИзмеренияРазмераТаблиц();
	Элементы.ЕдиницаИзмеренияРазмераТаблиц.СписокВыбора.Очистить();
	Для Каждого КлючЗначение ИЗ ЕдиницыИзмеренияРазмераТаблиц Цикл
		Элементы.ЕдиницаИзмеренияРазмераТаблиц.СписокВыбора.Добавить(КлючЗначение.Значение);
	КонецЦикла;
	ЕдиницаИзмеренияРазмераТаблиц = ЕдиницыИзмеренияРазмераТаблиц.КБ;
	УстановитьЗаголовкиКолонокРазмераТаблиц();

	АдресСтруктурыБазы = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ЗаполнитьСтруктуруХраненияБазы();


	УИ_ОбщегоНазначения.ФормаИнструментаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры





#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИскатьВИменахПолейПриИзменении(Элемент)
	ЗаполнитьТаблицуРезультатаСУчетомФИльтров();
КонецПроцедуры

&НаКлиенте
Процедура ТочноеСоответствиеПриИзменении(Элемент)
	ЗаполнитьТаблицуРезультатаСУчетомФИльтров();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	ЗаполнитьТаблицуРезультатаСУчетомФИльтров();
КонецПроцедуры


&НаКлиенте
Процедура СпособОпределенияРазмераТаблицыПриИзменении(Элемент)
	ПриИзмененииСпособаОпределенияРазмераТаблицНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияРазмераТаблицПриИзменении(Элемент)
	УстановитьЗаголовкиКолонокРазмераТаблиц();
	ВывестиРазмерыТаблицВТаблицуРезультата();
КонецПроцедуры

#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы //<ИмяТаблицыФормы>
//
//// Код процедур и функций
//
//#КонецОбласти

#Область ОбработчикиКомандФормы


&НаКлиенте
Процедура ОбновитьРазмерТаблицБазыДанных(Команда)
	ЗаполнитьТаблицуРазмеровТаблицБазы();
	ВывестиРазмерыТаблицВТаблицуРезультата();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьОтбор(Команда)

	ЗаполнитьТаблицуРезультатаСУчетомФИльтров();

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьОбщуюКомандуИнструментов(Команда) Экспорт
	УИ_ОбщегоНазначенияКлиент.Подключаемый_ВыполнитьОбщуюКомандуИнструментов(ЭтотОбъект, Команда);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВывестиРазмерыТаблицВТаблицуРезультата()

	Делитель = 1;
	Если ЕдиницаИзмеренияРазмераТаблиц = ЕдиницыИзмеренияРазмераТаблиц().МБ Тогда
		Делитель = 1024;
	КонецЕсли;
	Для Каждого СтрокаТаблицы Из Результат Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ИмяТаблицы", СтрокаТаблицы.ИмяТаблицыХранения);

		СтрокаТаблицы.РазмерДанных = 0;
		СтрокаТаблицы.РазмерИндексов =  0;
		СтрокаТаблицы.Зарезервировано = 0;
		СтрокаТаблицы.Свободно = 0;
		СтрокаТаблицы.КоличествоСтрок = 0;

		НайденныеСтроки = РазмерыТаблицБазы.НайтиСтроки(СтруктураПоиска);
		Для Каждого Стр Из НайденныеСтроки Цикл
			СтрокаТаблицы.РазмерДанных = СтрокаТаблицы.РазмерДанных + Стр.РазмерДанных;
			СтрокаТаблицы.РазмерИндексов = СтрокаТаблицы.РазмерИндексов + Стр.РазмерИндексов;
			СтрокаТаблицы.Зарезервировано = СтрокаТаблицы.Зарезервировано + Стр.Зарезервировано;
			СтрокаТаблицы.Свободно = СтрокаТаблицы.Свободно + Стр.Свободно;
			СтрокаТаблицы.КоличествоСтрок = СтрокаТаблицы.КоличествоСтрок + Стр.КоличествоСтрок;
		КонецЦикла;


		Если Делитель <> 1 Тогда
			СтрокаТаблицы.РазмерДанных = СтрокаТаблицы.РазмерДанных / Делитель;
			СтрокаТаблицы.РазмерИндексов = СтрокаТаблицы.РазмерИндексов / Делитель;
			СтрокаТаблицы.Зарезервировано = СтрокаТаблицы.Зарезервировано / Делитель;
			СтрокаТаблицы.Свободно = СтрокаТаблицы.Свободно / Делитель;
			СтрокаТаблицы.КоличествоСтрок = СтрокаТаблицы.КоличествоСтрок / Делитель;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуРазмеровТаблицБазы()
	Если СпособОпределенияРазмераТаблиц = СпособыПолученияРазмераТаблицБазыДаных.Платформа.Имя Тогда
		ЗаполнитьТаблицуРазмеровТаблицБазыДанныхПлатформеннымМетодом();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРазмеровТаблицБазыДанныхПлатформеннымМетодом()
	РазмерыТаблицБазы.Очистить();
	СтруктураБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыБазы);
	
	Для Каждого СтрокаСтруктуры Из СтруктураБазы Цикл
		Если НРег(СтрокаСтруктуры.Назначение)<> "основная" Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаСтруктуры.Метаданные) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = РазмерыТаблицБазы.Добавить();
		НоваяСтрока.ИмяТаблицы = СтрокаСтруктуры.ИмяТаблицыХранения;
		
		МассивИмен = Новый Массив;
		МассивИмен.Добавить(СтрокаСтруктуры.Метаданные);
		
		Попытка
			//Появилось только в 8.3.15. На старых платформах не будет даже запускаться без такого вызова
			РазмерДанных = УИ_ОбщегоНазначения.ВычислитьВБезопасномРежиме("ПолучитьРазмерДанныхБазыДанных(,Параметры)",
																		  МассивИмен);
		Исключение
			РазмерДанных = 0;
		КонецПопытки;
		НоваяСтрока.РазмерДанных = РазмерДанных / 1024;

	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруХраненияБазы()

	СтруктураБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыБазы);

	Если СтруктураБазы = Неопределено Тогда

		СтруктураБазы = ПолучитьСтруктуруХраненияБазыДанных();
		ПоместитьВоВременноеХранилище(СтруктураБазы, АдресСтруктурыБазы);

	КонецЕсли;

	ЗаполнитьТаблицуРезультата(СтруктураБазы);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРезультата(СтруктураБазы, НайденныеСтроки = Неопределено)
	Результат.Очистить();

	Если НайденныеСтроки = Неопределено Тогда
		СтрокиДляРезультата=СтруктураБазы;
	Иначе
		СтрокиДляРезультата=НайденныеСтроки;
	КонецЕсли;
	
	ВыводитьРазмеры = СпособОпределенияРазмераТаблиц <> СпособыПолученияРазмераТаблицБазыДаных.Нет.Имя;

	Для Каждого Строка Из СтрокиДляРезультата Цикл
		НоваяСтрока = Результат.Добавить();
		НоваяСтрока.ИмяТаблицы = Строка.ИмяТаблицы;
		НоваяСтрока.Метаданные = Строка.Метаданные;
		НоваяСтрока.Назначение = Строка.Назначение;
		НоваяСтрока.ИмяТаблицыХранения = Строка.ИмяТаблицыХранения;

		Для Каждого Поле Из Строка.Поля Цикл
			НоваяСтрокаПолей = НоваяСтрока.Поля.Добавить();
			НоваяСтрокаПолей.ИмяПоляХранения = Поле.ИмяПоляХранения;
			НоваяСтрокаПолей.ИмяПоля = Поле.ИмяПоля;
			НоваяСтрокаПолей.Метаданные = Поле.Метаданные;
		КонецЦикла;

		Для Каждого Индекс Из Строка.Индексы Цикл
			НоваяСтрокаИндексов = НоваяСтрока.Индексы.Добавить();
			НоваяСтрокаИндексов.ИмяИндексаХранения = Индекс.ИмяИндексаХранения;

			// Поля индекса
			Для Каждого Поле Из Индекс.Поля Цикл
				НоваяСтрокаПолейИндекса = НоваяСтрокаИндексов.ПоляИндекса.Добавить();
				НоваяСтрокаПолейИндекса.ИмяПоляХранения = Поле.ИмяПоляХранения;
				НоваяСтрокаПолейИндекса.ИмяПоля = Поле.ИмяПоля;
				НоваяСтрокаПолейИндекса.Метаданные = Поле.Метаданные;
			КонецЦикла;

		КонецЦикла;


	КонецЦикла;
	
	Если ВыводитьРазмеры Тогда
		ВывестиРазмерыТаблицВТаблицуРезультата();
	КонецЕсли;
	Результат.Сортировать("Метаданные ВОЗР,ИмяТаблицы ВОЗР");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРезультатаСУчетомФИльтров()

	СтруктураБазы = ПолучитьИзВременногоХранилища(АдресСтруктурыБазы);

	ИмяДляПоиска = ВРЕГ(СокрЛП(Отбор));
	Если Не ТочноеСоответствие И Лев(ИмяДляПоиска, 1) = "_" Тогда
		ИмяДляПоиска = Сред(ИмяДляПоиска, 2);
	КонецЕсли;
	НайденныеСтроки = Новый Массив;

	Если ПустаяСтрока(ИмяДляПоиска) Тогда
		ЗаполнитьТаблицуРезультата(СтруктураБазы);
		Возврат;
	КонецЕсли;

	Для Каждого Строка Из СтруктураБазы Цикл

		Если ИскатьВИменахПолей Тогда
			Для Каждого СтрокаПоле Из Строка.Поля Цикл
				Если ТочноеСоответствие Тогда
					Если ВРЕГ(СтрокаПоле.ИмяПоляХранения) = ИмяДляПоиска Или ВРЕГ(СтрокаПоле.ИмяПоля) = ИмяДляПоиска Тогда
						НайденныеСтроки.Добавить(Строка);
					КонецЕсли;
				Иначе

					Если Найти(ВРЕГ(СтрокаПоле.ИмяПоляХранения), ИмяДляПоиска) > 0 Или Найти(ВРЕГ(СтрокаПоле.ИмяПоля),
						ИмяДляПоиска) Тогда
						НайденныеСтроки.Добавить(Строка);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		Если ТочноеСоответствие Тогда
			Если ВРЕГ(Строка.ИмяТаблицыХранения) = ИмяДляПоиска Или ВРЕГ(Строка.ИмяТаблицы) = ИмяДляПоиска Или ВРЕГ(
				Строка.Метаданные) = ИмяДляПоиска Или ВРЕГ(Строка.Назначение) = ИмяДляПоиска Тогда
				НайденныеСтроки.Добавить(Строка);
			КонецЕсли;
		Иначе
			Если Найти(ВРЕГ(Строка.ИмяТаблицыХранения), ИмяДляПоиска) > 0 Или Найти(ВРЕГ(Строка.ИмяТаблицы),
				ИмяДляПоиска) Или Найти(ВРЕГ(Строка.Метаданные), ИмяДляПоиска) Или Найти(ВРЕГ(Строка.Назначение),
				ИмяДляПоиска) Тогда
				НайденныеСтроки.Добавить(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	ЗаполнитьТаблицуРезультата(НайденныеСтроки);
КонецПроцедуры

// Способы получения размера таблиц базы даных.
// 
// Возвращаемое значение:
//  Структура - Способы получения размера таблиц базы даных:
// * Нет - Структура - :
// ** Имя - Строка - 
// ** Представление - Строка - 
// * Платформа - Структура - :
// ** Имя - Строка - 
// ** Представление - Строка - 
// * psql - Структура - :
// ** Имя - Строка - 
// ** Представление - Строка - 
// * sqlcmd - Структура - :
// ** Имя - Строка - 
// ** Представление - Строка - 
&НаСервереБезКонтекста
Функция СпособыПолученияРазмераТаблицБазыДаных()
	Способы = Новый Структура;
	Способы.Вставить("Нет", НовыйСпособПолученияРазмераТаблицБазы("Нет", "Не получать размеры таблиц"));
	Если УИ_ОбщегоНазначенияКлиентСервер.ВерсияПлатформыНеМладше("8.3.15") Тогда
		Способы.Вставить("Платформа", НовыйСпособПолученияРазмераТаблицБазы("Платформа",
																			"Платформенный метод ""ПолучитьРазмерДанныхБазыДанных"""));
	КонецЕсли;
	Если Не УИ_ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Способы.Вставить("psql", НовыйСпособПолученияРазмераТаблицБазы("psql", "Утилита ""psql"". PostgreSQL"));
		Способы.Вставить("sqlcmd", НовыйСпособПолученияРазмераТаблицБазы("sqlcmd", "Утилита ""sqlcmd"". MSSQL"));
	КонецЕсли;
	
	Возврат Способы;
КонецФункции

&НаСервереБезКонтекста
Функция НовыйСпособПолученияРазмераТаблицБазы(Имя, Представление)
	Способ = Новый Структура;
	Способ.Вставить("Имя", Имя);
	Способ.Вставить("Представление", Представление);
	
	Возврат Способ;
КонецФункции

&НаСервереБезКонтекста
Функция ЕдиницыИзмеренияРазмераТаблиц()
	Единицы = Новый Структура;
	Единицы.Вставить("КБ", "КБ");
	Единицы.Вставить("МБ", "МБ");
	
	Возврат Единицы;
КонецФункции

&НаСервере
Процедура ПриИзмененииСпособаОпределенияРазмераТаблицНаСервере()
	РазмерыТаблицБазы.Очистить();
	
	ЭтоПлатформенныйМетод = СпособОпределенияРазмераТаблиц = СпособыПолученияРазмераТаблицБазыДаных.Платформа.Имя;
	ПолучатьРазмерыТаблиц = СпособОпределенияРазмераТаблиц <> СпособыПолученияРазмераТаблицБазыДаных.Нет.Имя;
	
	Элементы.РезультатГруппаРазмерыТаблиц.Видимость = ПолучатьРазмерыТаблиц;
	Элементы.РезультатКоличествоСтрок.Видимость = ПолучатьРазмерыТаблиц И Не ЭтоПлатформенныйМетод;
	Элементы.РезультатРазмерИндексов.Видимость = ПолучатьРазмерыТаблиц И Не ЭтоПлатформенныйМетод;
	Элементы.РезультатЗарезервировано.Видимость = ПолучатьРазмерыТаблиц И Не ЭтоПлатформенныйМетод;
	Элементы.РезультатСвободно.Видимость = ПолучатьРазмерыТаблиц И Не ЭтоПлатформенныйМетод;
	
	Элементы.ГруппаСтраницыНастройкиПолученияРазмеровТаблиц.ТекущаяСтраница = Элементы["ГруппаСтраницаНастройкиПолученияРазмеров"
																					   + СпособОпределенияРазмераТаблиц];
																					   
	Элементы.ГруппаРазмерыТаблиц.ЗаголовокСвернутогоОтображения = "Размеры таблиц базы данных: "+СпособыПолученияРазмераТаблицБазыДаных[СпособОпределенияРазмераТаблиц].Представление;
КонецПроцедуры


&НаСервере
Процедура УстановитьЗаголовкиКолонокРазмераТаблиц()
	Элементы.РезультатРазмерДанных.Заголовок = "Данные (" + ЕдиницаИзмеренияРазмераТаблиц + ")";
	Элементы.РезультатРазмерИндексов.Заголовок = "Индексы (" + ЕдиницаИзмеренияРазмераТаблиц + ")";
	Элементы.РезультатЗарезервировано.Заголовок = "Зарезервировано всего (" + ЕдиницаИзмеренияРазмераТаблиц + ")";
	Элементы.РезультатСвободно.Заголовок = "Свободно (" + ЕдиницаИзмеренияРазмераТаблиц + ")";
КонецПроцедуры


#КонецОбласти
